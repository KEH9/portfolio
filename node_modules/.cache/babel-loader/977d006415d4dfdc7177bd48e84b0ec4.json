{"ast":null,"code":"import _classCallCheck from \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\web\\\\\\u0423\\u0447\\u0435\\u0431\\u043D\\u044B\\u0435 html\\\\react\\\\portfolio\\\\src\\\\components\\\\game\\\\Game.js\";\n\n/* eslint-disable prefer-destructuring */\n// todo\n// clean old img\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { newbie, veteran, ace } from '../../constants/difficultyLevels';\nimport { setRabbitsToWin as _setRabbitsToWin, increaseDifficultyLevel as _increaseDifficultyLevel, decreaseDifficultyLevel as _decreaseDifficultyLevel, setCurrentSpeed as _setCurrentSpeed, setSpeedLimit as _setSpeedLimit, setSpeedStep as _setSpeedStep, setWinCondition as _setWinCondition, setRenderArray as _setRenderArray, setRabbit as _setRabbit, setBang as _setBang, setMessage as _setMessage, setSpeedRPS as _setSpeedRPS, setChooseLevel as _setChooseLevel, setFireworks as _setFireworks, setScale as _setScale } from '../../actions/actionCeator';\nimport './Game.css';\nimport StartMenu from './StartMenu';\nimport randomInt from './randomInt';\nimport head from './img/snake-head-bottom.png';\nimport body from './img/snake-body-up-down.png';\nimport bodyCurve from './img/snake-turn-left-bottom.png';\nimport tail from './img/snake-tail-up.png';\nimport tailUSD from './img/snake-tail-down.png';\nimport rabbitIMG from './img/rabbit.png';\nimport bangIMG from './img/bang.gif';\nimport fireworksIMG from './img/fireworks.gif';\nimport soundOn from './img/sound-on.jpg';\nimport soundOff from './img/sound-off.jpg';\nimport nom from './sound/nom.mp3';\nimport aaarrrrr from './sound/aaarrrrr.mp3';\nimport yuhuu from './sound/yuhuu.mp3';\n/*\r\n* Main class includes game board and everything on it\r\n*/\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // preloading pictures\n      var picturesToPreload = ['./img/snake-head-bottom.png', './img/snake-body-up-down.png', './img/snake-turn-left-bottom.png', './img/snake-tail-up.png', './img/snake-tail-down.png', './img/rabbit.png', './img/bang.gif', './img/fireworks.gif'];\n      picturesToPreload.forEach(function (picture) {\n        var img = new Image();\n        img.src = picture;\n      });\n      document.title = 'Cozy snake';\n      this.startMenu = React.createElement(StartMenu, {\n        increaseDifficultyLevel: this.increaseDifficultyLevel.bind(this),\n        decreaseDifficultyLevel: this.decreaseDifficultyLevel.bind(this),\n        restartGame: this.restartGame.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n      this.gameIn = false;\n      this.timerId = '';\n      var docWidth = document.getElementsByTagName('body')[0].clientWidth;\n\n      if (docWidth <= 1024) {\n        this.scale = 20;\n      } else if (docWidth <= 1400) {\n        this.scale = 25;\n      } else if (docWidth <= 1600) {\n        this.scale = 30;\n      } else if (docWidth <= 2500) {\n        this.scale = 35;\n      } else {\n        this.scale = 45;\n      }\n\n      this.props.setScale(this.scale);\n      this.boardElement = document.getElementsByClassName('board')[0];\n      this.boardElement.style.height = \"\".concat(20 * this.scale, \"px\");\n      this.boardElement.style.width = \"\".concat(28 * this.scale, \"px\");\n      this.boardElement.style.borderWidth = \"\".concat(this.scale, \"px\");\n      this.setDefaultProps();\n      this.welcome();\n      this.soundInit();\n\n      this.keyDownFunction = function (e) {\n        _this.keyPressHandler(e);\n      };\n\n      window.addEventListener('keydown', this.keyDownFunction, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('keydown', this.keyDownFunction, false);\n      clearInterval(this.ticId);\n      clearTimeout(this.timerId);\n    } // needs for component mount after dismounting only to renew state!\n\n  }, {\n    key: \"setDefaultProps\",\n    value: function setDefaultProps() {\n      if (this.props.difficultyLevel === newbie) {\n        this.props.setRabbitsToWin(65);\n        this.props.setCurrentSpeed(200);\n      } else if (this.props.difficultyLevel === veteran) {\n        this.props.setRabbitsToWin(100);\n        this.props.setCurrentSpeed(170);\n      } else if (this.props.difficultyLevel === ace) {\n        this.props.setRabbitsToWin(120);\n        this.props.setCurrentSpeed(150);\n      }\n\n      this.props.setRenderArray([]);\n      this.props.setRabbit('');\n      this.props.setBang('');\n      this.props.setMessage('');\n      this.props.setSpeedRPS(0);\n      this.props.setFireworks('');\n    }\n  }, {\n    key: \"restartGame\",\n    value: function restartGame() {\n      this.props.setRenderArray([]);\n      this.props.setRabbit('');\n      this.props.setBang('');\n      this.props.setMessage('');\n      this.props.setFireworks('');\n      /*\r\n      * snakeLogicArray contains information about pieces of snake, each piece information includes:\r\n      * piece type\r\n      * X coord\r\n      * Y coord\r\n      * direction of the piece (place where piece attach to other piece, its mean direction to\r\n      * next piece. This decision is not obvious, but I decided it is better)\r\n      * img file\r\n      */\n\n      this.snakeLogicArray = [{\n        piece: 'head',\n        x: 5 * this.scale,\n        y: 0,\n        direction: 'left',\n        pic: head\n      }, {\n        piece: 'body',\n        x: 4 * this.scale,\n        y: 0,\n        direction: 'left',\n        pic: body\n      }, {\n        piece: 'body',\n        x: 3 * this.scale,\n        y: 0,\n        direction: 'left',\n        pic: body\n      }, {\n        piece: 'body',\n        x: 2 * this.scale,\n        y: 0,\n        direction: 'left',\n        pic: body\n      }, {\n        piece: 'tail',\n        x: 1 * this.scale,\n        y: 0,\n        direction: 'left',\n        pic: tail\n      }];\n      this.props.setRabbitsToWin(this.props.winCondition);\n      this.ticCounter = 0;\n      this.currentMoveConnecton = 'left'; // direction of the snake head (direction where head attach to other piece)\n\n      this.nextMoveConnection = 'left'; // same in the next move\n\n      this.lastHeadConnection = 'left'; // same in the tic before\n\n      this.rabbitX = '';\n      this.rabbitY = '';\n      this.rabbitsEaten = 0;\n      this.rabbitJustEaten = false;\n      this.keyPressedThisTic = false;\n      this.keyBuffered = '';\n      this.props.setChooseLevel('');\n      this.gamePaused = false;\n      this.gameIn = true;\n      this.ticId = '';\n      this.ticGenerator();\n      this.createRenderSnakeArray();\n      this.addRabbit();\n      document.getElementsByClassName('board')[0].classList.add('playing');\n    } // Generates the rhythm of the game\n\n  }, {\n    key: \"ticGenerator\",\n    value: function ticGenerator() {\n      var _this2 = this;\n\n      this.ticId = setInterval(function () {\n        _this2.ticHandler();\n      }, this.props.currentSpeed);\n      this.props.setSpeedRPS((Math.round(1000 / this.props.currentSpeed * 100) / 100).toFixed(2));\n    }\n  }, {\n    key: \"stopTic\",\n    value: function stopTic() {\n      clearInterval(this.ticId);\n    } // events on every tic of the game\n\n  }, {\n    key: \"ticHandler\",\n    value: function ticHandler() {\n      this.ticCounter = this.ticCounter + 1;\n      this.currentMoveConnecton = this.nextMoveConnection;\n      this.addNewBodyPieceToLogicArray();\n      this.removeLastBodyPieceFromLogicArray();\n      this.addTailToLogicArray();\n      this.addHeadToLogicArray();\n\n      if (this.keyPressedThisTic === true) {\n        this.keyPressedThisTic = false;\n        this.changeDirection(this.keyBuffered);\n        this.keyBuffered = '';\n      }\n\n      this.createRenderSnakeArray();\n    } // changing game parameters which are dependent on game difficulty level\n\n  }, {\n    key: \"increaseDifficultyLevel\",\n    value: function increaseDifficultyLevel() {\n      if (this.props.difficultyLevel === newbie) {\n        this.props.setRabbitsToWin(100);\n        this.props.setCurrentSpeed(170);\n        this.props.setSpeedLimit(130);\n        this.props.setSpeedStep(1);\n        this.props.setWinCondition(100);\n      } else if (this.props.difficultyLevel === veteran) {\n        this.props.setRabbitsToWin(140);\n        this.props.setCurrentSpeed(150);\n        this.props.setSpeedLimit(120);\n        this.props.setSpeedStep(1);\n        this.props.setWinCondition(140);\n      }\n\n      this.props.increaseDifficultyLevel();\n    } // changing game parameters which are dependent on game difficulty level\n\n  }, {\n    key: \"decreaseDifficultyLevel\",\n    value: function decreaseDifficultyLevel() {\n      if (this.props.difficultyLevel === veteran) {\n        this.props.setRabbitsToWin(65);\n        this.props.setCurrentSpeed(200);\n        this.props.setSpeedLimit(150);\n        this.props.setSpeedStep(2);\n        this.props.setWinCondition(65);\n      } else if (this.props.difficultyLevel === ace) {\n        this.props.setRabbitsToWin(100);\n        this.props.setCurrentSpeed(170);\n        this.props.setSpeedLimit(130);\n        this.props.setSpeedStep(1);\n        this.props.setWinCondition(100);\n      }\n\n      this.props.decreaseDifficultyLevel();\n    }\n  }, {\n    key: \"keyPressHandler\",\n    value: function keyPressHandler(e) {\n      var key = e.keyCode ? e.keyCode : e.which;\n\n      if ((key === 13 || key === 32) && this.gameIn) {\n        // enter and space when game already started\n        e.preventDefault();\n        this.pauseGame();\n      } else if ((key === 13 || key === 32) && !this.gameIn) {\n        // enter and space in start menu\n        this.restartGame();\n      }\n\n      if (key === 37 && !this.gameIn) {\n        // cursor left in menu\n        this.decreaseDifficultyLevel();\n      }\n\n      if (key === 39 && !this.gameIn) {\n        // cursor right in menu\n        this.increaseDifficultyLevel();\n      }\n\n      if (( // bufferization of the key pressed if one keypress was already done in this tic\n      key === 37 || key === 38 || key === 39 || key === 40 || key === 65 || key === 68 || key === 83 || key === 87) && this.keyPressedThisTic === false && this.gameIn) {\n        this.keyPressedThisTic = true;\n        this.changeDirection(key);\n      } else if ((key === 37 || key === 38 || key === 39 || key === 40 || key === 65 || key === 68 || key === 83 || key === 87) && this.gameIn) {\n        this.keyBuffered = key;\n      }\n\n      if (key === 77) {\n        // mute / unmute sound\n        this.soundToggle();\n      }\n    } // Changes direction of the snake movement\n\n  }, {\n    key: \"changeDirection\",\n    value: function changeDirection(key) {\n      if ((key === 37 || key === 65) && this.currentMoveConnecton !== 'left') {\n        // left arrow\n        this.nextMoveConnection = 'right';\n      }\n\n      if ((key === 38 || key === 87) && this.currentMoveConnecton !== 'up') {\n        // up arrow\n        this.nextMoveConnection = 'down';\n      }\n\n      if ((key === 39 || key === 68) && this.currentMoveConnecton !== 'right') {\n        // right arrow\n        this.nextMoveConnection = 'left';\n      }\n\n      if ((key === 40 || key === 83) && this.currentMoveConnecton !== 'down') {\n        // down arrow\n        this.nextMoveConnection = 'up';\n      }\n    } // increasing speed of the snake (tic rithm)\n\n  }, {\n    key: \"increaseSpeed\",\n    value: function increaseSpeed() {\n      if (this.props.currentSpeed <= this.props.speedLimit) return;\n      var newCurrentSpeed = this.props.currentSpeed - this.props.speedStep;\n      this.props.setCurrentSpeed(newCurrentSpeed);\n      clearInterval(this.ticId);\n      this.ticGenerator();\n      this.props.setSpeedRPS((Math.round(1000 / this.props.currentSpeed * 100) / 100).toFixed(2));\n    } // Snake got the rabbit event\n\n  }, {\n    key: \"rabbitEaten\",\n    value: function rabbitEaten() {\n      this.rabbitsEaten = this.rabbitsEaten + 1;\n      this.props.setRabbitsToWin(this.props.winCondition - this.rabbitsEaten);\n\n      if (this.rabbitsEaten === this.props.winCondition) {\n        this.congratulations();\n        return;\n      }\n\n      this.addRabbit();\n      if (this.soundIsOn) new Audio(nom).play();\n      this.rabbitJustEaten = true;\n      this.increaseSpeed();\n    }\n  }, {\n    key: \"snakeGotItself\",\n    value: function snakeGotItself(x, y) {\n      var _this3 = this;\n\n      this.stopTic();\n      if (this.soundIsOn) new Audio(aaarrrrr).play();\n      var style = {\n        left: \"\".concat(x - 100, \"px\"),\n        top: \"\".concat(y - 100, \"px\")\n      };\n      this.props.setBang(React.createElement(\"img\", {\n        src: bangIMG,\n        alt: \"\",\n        className: \"bang\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }));\n      this.timeoutId = setTimeout(function () {\n        _this3.gameOver();\n      }, 2000);\n    } // snake hit the border\n\n  }, {\n    key: \"collision\",\n    value: function collision(x, y) {\n      var _this4 = this;\n\n      this.stopTic();\n      if (this.soundIsOn) new Audio(aaarrrrr).play();\n      var style = {\n        left: \"\".concat(x - 88, \"px\"),\n        top: \"\".concat(y - 88, \"px\")\n      };\n      this.props.setBang(React.createElement(\"img\", {\n        src: bangIMG,\n        alt: \"\",\n        className: \"bang\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }));\n      this.timeoutId = setTimeout(function () {\n        _this4.gameOver();\n      }, 2000);\n    } // welcome menu (game just loaded)\n\n  }, {\n    key: \"welcome\",\n    value: function welcome() {\n      var style = {\n        fontSize: \"\".concat(this.scale * 2.5, \"px\")\n      };\n      this.props.setMessage(React.createElement(\"div\", {\n        className: \"message\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"WELCOME TO\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), \"COZY SNAKE GAME!\"));\n      this.props.setChooseLevel(this.startMenu);\n    } // pausing/unpausing game\n\n  }, {\n    key: \"pauseGame\",\n    value: function pauseGame() {\n      if (!this.gamePaused) {\n        this.gamePaused = !this.gamePaused;\n        this.stopTic();\n        var style = {\n          fontSize: \"\".concat(this.scale * 5, \"px\")\n        };\n        this.props.setMessage(React.createElement(\"div\", {\n          className: \"message\",\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, \"GAME PAUSED\"));\n      } else {\n        this.gamePaused = !this.gamePaused;\n        this.props.setMessage('');\n        this.ticGenerator();\n      }\n    } // game over menu\n\n  }, {\n    key: \"gameOver\",\n    value: function gameOver() {\n      this.gameIn = false;\n      this.removeGame();\n      var style = {\n        fontSize: \"\".concat(this.scale * 4, \"px\")\n      };\n      this.props.setMessage(React.createElement(\"div\", {\n        className: \"message\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"GAME OVER\"));\n      this.props.setChooseLevel(this.startMenu);\n    } // win event\n\n  }, {\n    key: \"congratulations\",\n    value: function congratulations() {\n      var _this5 = this;\n\n      this.gameIn = false;\n      this.removeGame();\n      if (this.soundIsOn) new Audio(yuhuu).play();\n      var styleFireworks = {\n        height: \"\".concat(this.scale * 20, \"px\"),\n        width: \"\".concat(this.scale * 28, \"px\")\n      };\n      this.props.setFireworks(React.createElement(\"img\", {\n        src: fireworksIMG,\n        alt: \"\",\n        className: \"fireworks\",\n        style: styleFireworks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }));\n      this.timeoutId = setTimeout(function () {\n        _this5.props.setFireworks('');\n\n        var style = {\n          fontSize: \"\".concat(_this5.scale * 2.5, \"px\")\n        };\n\n        _this5.props.setMessage(React.createElement(\"div\", {\n          className: \"message\",\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, \"CONGRATULATIONS! you win!\"));\n\n        _this5.props.setChooseLevel(_this5.startMenu);\n      }, 2500);\n    } // stoping tic and setting default condition of the game\n\n  }, {\n    key: \"removeGame\",\n    value: function removeGame() {\n      this.stopTic();\n      this.props.setRenderArray([]);\n      this.props.setRabbit('');\n      this.props.setBang('');\n      this.snakeLogicArray = [];\n      this.ticCounter = 0;\n      this.nextMoveConnection = 'left';\n      this.currentMoveConnecton = 'left';\n      this.lastHeadConnection = 'left';\n      this.rabbitX = '';\n      this.rabbitY = '';\n      this.rabbitsEaten = 0;\n      this.rabbitJustEaten = false;\n      this.ticId = '';\n      document.getElementsByClassName('board')[0].classList.remove('playing');\n    }\n    /*\r\n    * headOnly - cheks if head coordinates equal to x,y of rabbit (got him!)\r\n    * wholeSnake - cheks if all pieces of the snake coordinates equal to x,y (rabbit placement)\r\n    * bodyAndTail - cheks if all pieces of the snake coordinates exept head equal to x,y (got itself!)\r\n    * borderCollision - cheks if head coordinates equal bordiers coordinates\r\n    */\n\n  }, {\n    key: \"checkSnakeCoordinates\",\n    value: function checkSnakeCoordinates(x, y, typeOfCheck) {\n      if (typeOfCheck === 'headOnly') {\n        if (this.snakeLogicArray[0].x === x && this.snakeLogicArray[0].y === y) {\n          return true;\n        }\n\n        return false;\n      }\n\n      if (typeOfCheck === 'wholeSnake') {\n        for (var i = 0; i < this.snakeLogicArray.length; i++) {\n          if (this.snakeLogicArray[i].x === x && this.snakeLogicArray[i].y === y) return false;\n        }\n\n        return true;\n      }\n\n      if (typeOfCheck === 'bodyAndTail') {\n        for (var _i = 1; _i < this.snakeLogicArray.length; _i++) {\n          if (this.snakeLogicArray[_i].x === x && this.snakeLogicArray[_i].y === y) return true;\n        }\n\n        return false;\n      }\n\n      if (typeOfCheck === 'borderCollision') {\n        if (x >= 28 * this.scale || y >= 20 * this.scale || x <= -1 || y <= -1) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    } // adding new head to logic array\n\n  }, {\n    key: \"addHeadToLogicArray\",\n    value: function addHeadToLogicArray() {\n      this.lastHeadConnection = this.nextMoveConnection;\n\n      switch (this.nextMoveConnection) {\n        case 'left':\n          this.snakeLogicArray[0].x = this.snakeLogicArray[0].x + this.scale;\n          this.snakeLogicArray[0].direction = 'left';\n          break;\n\n        case 'right':\n          this.snakeLogicArray[0].x = this.snakeLogicArray[0].x - this.scale;\n          this.snakeLogicArray[0].direction = 'right';\n          break;\n\n        case 'up':\n          this.snakeLogicArray[0].y = this.snakeLogicArray[0].y + this.scale;\n          this.snakeLogicArray[0].direction = 'up';\n          break;\n\n        case 'down':\n          this.snakeLogicArray[0].y = this.snakeLogicArray[0].y - this.scale;\n          this.snakeLogicArray[0].direction = 'down';\n          break;\n\n        default:\n          break;\n      }\n\n      if (this.checkSnakeCoordinates(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y, 'bodyAndTail') === true) {\n        this.snakeGotItself(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y);\n        return;\n      }\n\n      if (this.checkSnakeCoordinates(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y, 'borderCollision') === true) {\n        this.collision(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y);\n        return;\n      }\n\n      if (this.checkSnakeCoordinates(this.rabbitX, this.rabbitY, 'headOnly') === true) {\n        this.rabbitEaten();\n      }\n    } // adding new body piece to logic array\n\n  }, {\n    key: \"addNewBodyPieceToLogicArray\",\n    value: function addNewBodyPieceToLogicArray() {\n      var newBodyPiece = {};\n      newBodyPiece.x = this.snakeLogicArray[0].x;\n      newBodyPiece.y = this.snakeLogicArray[0].y;\n\n      if (this.lastHeadConnection === this.nextMoveConnection) {\n        newBodyPiece.piece = 'body';\n        newBodyPiece.direction = this.snakeLogicArray[0].direction; // direction\n\n        newBodyPiece.pic = body; // img\n      } else {\n        newBodyPiece.piece = 'bodyCurve';\n        var nextConnection;\n\n        switch (this.nextMoveConnection) {\n          // head connection is opposite to body ;)\n          case 'left':\n            nextConnection = 'right';\n            break;\n\n          case 'right':\n            nextConnection = 'left';\n            break;\n\n          case 'up':\n            nextConnection = 'down';\n            break;\n\n          case 'down':\n            nextConnection = 'up';\n            break;\n\n          default:\n            break;\n        }\n\n        newBodyPiece.direction = \"\".concat(this.lastHeadConnection, \"-\").concat(nextConnection); // direction\n\n        newBodyPiece.pic = bodyCurve; // img\n      }\n\n      this.snakeLogicArray.splice(1, 0, newBodyPiece);\n    } // removing last body piece from logic array\n\n  }, {\n    key: \"removeLastBodyPieceFromLogicArray\",\n    value: function removeLastBodyPieceFromLogicArray() {\n      if (this.rabbitJustEaten) return;\n      this.snakeLogicArray.splice(this.snakeLogicArray.length - 1, 1);\n    } // adding tail piece to logic array\n\n  }, {\n    key: \"addTailToLogicArray\",\n    value: function addTailToLogicArray() {\n      if (this.rabbitJustEaten) {\n        this.rabbitJustEaten = false;\n        return;\n      }\n\n      var lastPiecePosition = this.snakeLogicArray.length - 1;\n      var lastPiece = this.snakeLogicArray[lastPiecePosition];\n      lastPiece.piece = 'tail';\n      lastPiece.pic = tail;\n      var lastPieceDirection = lastPiece.direction;\n      var connection;\n      var dashPosition = lastPieceDirection.indexOf('-');\n\n      if (dashPosition === -1) {\n        connection = lastPiece.direction;\n      } else {\n        connection = lastPiece.direction.slice(dashPosition + 1);\n        lastPiece.pic = tailUSD;\n      }\n\n      lastPiece.direction = connection;\n      this.snakeLogicArray[lastPiecePosition] = lastPiece;\n    } // adding new rabbit to game field\n\n  }, {\n    key: \"addRabbit\",\n    value: function addRabbit() {\n      var x;\n      var y;\n      var checkResult;\n\n      do {\n        x = randomInt(0, 27) * this.scale;\n        y = randomInt(0, 19) * this.scale;\n        checkResult = this.checkSnakeCoordinates(x, y, 'wholeSnake');\n      } while (!checkResult);\n\n      this.rabbitX = x;\n      this.rabbitY = y;\n      var style = {\n        left: \"\".concat(x, \"px\"),\n        top: \"\".concat(y, \"px\"),\n        height: \"\".concat(this.scale, \"px\")\n      };\n      this.props.setRabbit(React.createElement(\"img\", {\n        src: rabbitIMG,\n        alt: \"\",\n        className: \"rabbit\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }));\n    } // convert logic array to render array\n\n  }, {\n    key: \"createRenderSnakeArray\",\n    value: function createRenderSnakeArray() {\n      var newRenderArray = [];\n\n      for (var i = 0; i < this.snakeLogicArray.length; i++) {\n        var style = {\n          left: \"\".concat(this.snakeLogicArray[i].x, \"px\"),\n          top: \"\".concat(this.snakeLogicArray[i].y, \"px\")\n        };\n        newRenderArray.push(React.createElement(\"img\", {\n          key: \"\".concat(this.snakeLogicArray[i].x, \" \").concat(this.snakeLogicArray[i].y),\n          src: this.snakeLogicArray[i].pic,\n          alt: \"\",\n          className: \"\".concat(this.snakeLogicArray[i].piece, \" \").concat(this.snakeLogicArray[i].direction),\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }));\n      }\n\n      this.props.setRenderArray(newRenderArray); // setting up sizes of images for snake\n\n      this.headElement = document.getElementsByClassName('head')[0];\n\n      if (this.headElement) {\n        this.headElement.style.height = \"\".concat(this.scale, \"px\");\n        this.bodyElements = document.getElementsByClassName('body');\n\n        for (var _i2 = 0; _i2 < this.bodyElements.length; _i2++) {\n          this.bodyElements[_i2].style.height = \"\".concat(this.scale, \"px\");\n        }\n\n        this.tailElement = document.getElementsByClassName('tail')[0];\n        this.tailElement.style.height = \"\".concat(this.scale, \"px\");\n      }\n    } // initiating sound icon\n\n  }, {\n    key: \"soundInit\",\n    value: function soundInit() {\n      this.soundIsOn = true;\n      this.sound = React.createElement(\"img\", {\n        src: soundOn,\n        alt: \"\",\n        className: \"sound\",\n        onClick: this.soundToggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      });\n    } // mute / unmute sound\n\n  }, {\n    key: \"soundToggle\",\n    value: function soundToggle() {\n      if (this.soundIsOn) {\n        this.soundIsOn = false;\n        this.sound = React.createElement(\"img\", {\n          src: soundOff,\n          alt: \"\",\n          className: \"sound\",\n          onClick: this.soundToggle.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718\n          },\n          __self: this\n        });\n        this.forceUpdate();\n      } else {\n        this.soundIsOn = true;\n        this.sound = React.createElement(\"img\", {\n          src: soundOn,\n          alt: \"\",\n          className: \"sound\",\n          onClick: this.soundToggle.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729\n          },\n          __self: this\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftColumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, this.props.renderArray, this.props.rabbit, this.props.bang, this.props.message, this.props.chooseLevel, this.props.fireworks), this.sound), React.createElement(\"div\", {\n        className: \"rightColumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toPlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, \"To play the game use cursor keys or aswd keys and space\"), React.createElement(\"div\", {\n        className: \"difficultyLevel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, \"Your difficulty level is\", React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      }, \" \", this.props.difficultyLevel, \" \")), React.createElement(\"div\", {\n        className: \"speedRPS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      }, \"Your current speed is\", React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, \" \", this.props.speedRPS, \" \"), \"rabbits per second\"), React.createElement(\"div\", {\n        className: \"rabbitsToWin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, \"You have to eat\", React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, \" \", this.props.rabbitsToWin, \" \"), \"more rabbits to win\"), React.createElement(\"div\", {\n        className: \"technologyStack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, \"Technology stack for this game: React.js, Redux, javascript (ES6), css, html\"), React.createElement(\"div\", {\n        className: \"github\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, \"You can get the source code of this game at my\", React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, \" \", React.createElement(\"a\", {\n        href: \"https://github.com/KEH9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, \"github\")), \"\\xA0account\"), React.createElement(\"div\", {\n        className: \"offerAJob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, \"If you want to\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, \"offer me a job\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }), \"visit my\\xA0\", React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/resume\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, \"website\")))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    difficultyLevel: state.difficultyLevel,\n    rabbitsToWin: state.rabbitsToWin,\n    currentSpeed: state.currentSpeed,\n    speedLimit: state.speedLimit,\n    speedStep: state.speedStep,\n    winCondition: state.winCondition,\n    renderArray: state.renderArray,\n    rabbit: state.rabbit,\n    bang: state.bang,\n    message: state.message,\n    speedRPS: state.speedRPS,\n    chooseLevel: state.chooseLevel,\n    fireworks: state.fireworks,\n    scale: state.scale\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    increaseDifficultyLevel: function increaseDifficultyLevel() {\n      dispatch(_increaseDifficultyLevel());\n    },\n    decreaseDifficultyLevel: function decreaseDifficultyLevel() {\n      dispatch(_decreaseDifficultyLevel());\n    },\n    setRabbitsToWin: function setRabbitsToWin(rabbitsToWin) {\n      dispatch(_setRabbitsToWin(rabbitsToWin));\n    },\n    setCurrentSpeed: function setCurrentSpeed(currentSpeed) {\n      dispatch(_setCurrentSpeed(currentSpeed));\n    },\n    setSpeedLimit: function setSpeedLimit(speedLimit) {\n      dispatch(_setSpeedLimit(speedLimit));\n    },\n    setSpeedStep: function setSpeedStep(speedStep) {\n      dispatch(_setSpeedStep(speedStep));\n    },\n    setWinCondition: function setWinCondition(winCondition) {\n      dispatch(_setWinCondition(winCondition));\n    },\n    setRenderArray: function setRenderArray(renderArray) {\n      dispatch(_setRenderArray(renderArray));\n    },\n    setRabbit: function setRabbit(rabbit) {\n      dispatch(_setRabbit(rabbit));\n    },\n    setBang: function setBang(bang) {\n      dispatch(_setBang(bang));\n    },\n    setMessage: function setMessage(message) {\n      dispatch(_setMessage(message));\n    },\n    setSpeedRPS: function setSpeedRPS(speedRPS) {\n      dispatch(_setSpeedRPS(speedRPS));\n    },\n    setChooseLevel: function setChooseLevel(chooseLevel) {\n      dispatch(_setChooseLevel(chooseLevel));\n    },\n    setFireworks: function setFireworks(fireworks) {\n      dispatch(_setFireworks(fireworks));\n    },\n    setScale: function setScale(scale) {\n      dispatch(_setScale(scale));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["C:\\web\\Учебные html\\react\\portfolio\\src\\components\\game\\Game.js"],"names":["React","Component","connect","NavLink","newbie","veteran","ace","setRabbitsToWin","increaseDifficultyLevel","decreaseDifficultyLevel","setCurrentSpeed","setSpeedLimit","setSpeedStep","setWinCondition","setRenderArray","setRabbit","setBang","setMessage","setSpeedRPS","setChooseLevel","setFireworks","setScale","StartMenu","randomInt","head","body","bodyCurve","tail","tailUSD","rabbitIMG","bangIMG","fireworksIMG","soundOn","soundOff","nom","aaarrrrr","yuhuu","Game","picturesToPreload","forEach","picture","img","Image","src","document","title","startMenu","bind","restartGame","gameIn","timerId","docWidth","getElementsByTagName","clientWidth","scale","props","boardElement","getElementsByClassName","style","height","width","borderWidth","setDefaultProps","welcome","soundInit","keyDownFunction","e","keyPressHandler","window","addEventListener","removeEventListener","clearInterval","ticId","clearTimeout","difficultyLevel","snakeLogicArray","piece","x","y","direction","pic","winCondition","ticCounter","currentMoveConnecton","nextMoveConnection","lastHeadConnection","rabbitX","rabbitY","rabbitsEaten","rabbitJustEaten","keyPressedThisTic","keyBuffered","gamePaused","ticGenerator","createRenderSnakeArray","addRabbit","classList","add","setInterval","ticHandler","currentSpeed","Math","round","toFixed","addNewBodyPieceToLogicArray","removeLastBodyPieceFromLogicArray","addTailToLogicArray","addHeadToLogicArray","changeDirection","key","keyCode","which","preventDefault","pauseGame","soundToggle","speedLimit","newCurrentSpeed","speedStep","congratulations","soundIsOn","Audio","play","increaseSpeed","stopTic","left","top","timeoutId","setTimeout","gameOver","fontSize","removeGame","styleFireworks","remove","typeOfCheck","i","length","checkSnakeCoordinates","snakeGotItself","collision","rabbitEaten","newBodyPiece","nextConnection","splice","lastPiecePosition","lastPiece","lastPieceDirection","connection","dashPosition","indexOf","slice","checkResult","newRenderArray","push","headElement","bodyElements","tailElement","sound","forceUpdate","renderArray","rabbit","bang","message","chooseLevel","fireworks","speedRPS","rabbitsToWin","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable prefer-destructuring */\r\n// todo\r\n// clean old img\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { newbie, veteran, ace } from '../../constants/difficultyLevels';\r\nimport {\r\n  setRabbitsToWin,\r\n  increaseDifficultyLevel,\r\n  decreaseDifficultyLevel,\r\n  setCurrentSpeed,\r\n  setSpeedLimit,\r\n  setSpeedStep,\r\n  setWinCondition,\r\n  setRenderArray,\r\n  setRabbit,\r\n  setBang,\r\n  setMessage,\r\n  setSpeedRPS,\r\n  setChooseLevel,\r\n  setFireworks,\r\n  setScale,\r\n} from '../../actions/actionCeator';\r\n\r\nimport './Game.css';\r\n\r\nimport StartMenu from './StartMenu';\r\nimport randomInt from './randomInt';\r\n\r\nimport head from './img/snake-head-bottom.png';\r\nimport body from './img/snake-body-up-down.png';\r\nimport bodyCurve from './img/snake-turn-left-bottom.png';\r\nimport tail from './img/snake-tail-up.png';\r\nimport tailUSD from './img/snake-tail-down.png';\r\nimport rabbitIMG from './img/rabbit.png';\r\nimport bangIMG from './img/bang.gif';\r\nimport fireworksIMG from './img/fireworks.gif';\r\nimport soundOn from './img/sound-on.jpg';\r\nimport soundOff from './img/sound-off.jpg';\r\n\r\nimport nom from './sound/nom.mp3';\r\nimport aaarrrrr from './sound/aaarrrrr.mp3';\r\nimport yuhuu from './sound/yuhuu.mp3';\r\n\r\n\r\n/*\r\n* Main class includes game board and everything on it\r\n*/\r\n\r\nclass Game extends Component {\r\n  componentDidMount() {\r\n    // preloading pictures\r\n    const picturesToPreload = [\r\n      './img/snake-head-bottom.png',\r\n      './img/snake-body-up-down.png',\r\n      './img/snake-turn-left-bottom.png',\r\n      './img/snake-tail-up.png',\r\n      './img/snake-tail-down.png',\r\n      './img/rabbit.png',\r\n      './img/bang.gif',\r\n      './img/fireworks.gif',\r\n    ];\r\n    picturesToPreload.forEach((picture) => {\r\n      const img = new Image();\r\n      img.src = picture;\r\n    });\r\n\r\n    document.title = 'Cozy snake';\r\n\r\n    this.startMenu = (\r\n      <StartMenu\r\n        increaseDifficultyLevel={this.increaseDifficultyLevel.bind(this)}\r\n        decreaseDifficultyLevel={this.decreaseDifficultyLevel.bind(this)}\r\n        restartGame={this.restartGame.bind(this)}\r\n      />\r\n    );\r\n    this.gameIn = false;\r\n    this.timerId = '';\r\n\r\n    const docWidth = document.getElementsByTagName('body')[0].clientWidth;\r\n    if (docWidth <= 1024) {\r\n      this.scale = 20;\r\n    } else if (docWidth <= 1400) {\r\n      this.scale = 25;\r\n    } else if (docWidth <= 1600) {\r\n      this.scale = 30;\r\n    } else if (docWidth <= 2500) {\r\n      this.scale = 35;\r\n    } else {\r\n      this.scale = 45;\r\n    }\r\n    this.props.setScale(this.scale);\r\n\r\n    this.boardElement = document.getElementsByClassName('board')[0];\r\n    this.boardElement.style.height = `${20 * this.scale}px`;\r\n    this.boardElement.style.width = `${28 * this.scale}px`;\r\n    this.boardElement.style.borderWidth = `${this.scale}px`;\r\n\r\n    this.setDefaultProps();\r\n    this.welcome();\r\n    this.soundInit();\r\n    this.keyDownFunction = (e) => { this.keyPressHandler(e); };\r\n    window.addEventListener('keydown', this.keyDownFunction, false);\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.keyDownFunction, false);\r\n    clearInterval(this.ticId);\r\n    clearTimeout(this.timerId);\r\n  }\r\n\r\n  // needs for component mount after dismounting only to renew state!\r\n  setDefaultProps() {\r\n    if (this.props.difficultyLevel === newbie) {\r\n      this.props.setRabbitsToWin(65);\r\n      this.props.setCurrentSpeed(200);\r\n    } else if (this.props.difficultyLevel === veteran) {\r\n      this.props.setRabbitsToWin(100);\r\n      this.props.setCurrentSpeed(170);\r\n    } else if (this.props.difficultyLevel === ace) {\r\n      this.props.setRabbitsToWin(120);\r\n      this.props.setCurrentSpeed(150);\r\n    }\r\n    this.props.setRenderArray([]);\r\n    this.props.setRabbit('');\r\n    this.props.setBang('');\r\n    this.props.setMessage('');\r\n    this.props.setSpeedRPS(0);\r\n    this.props.setFireworks('');\r\n  }\r\n\r\n\r\n  restartGame() {\r\n    this.props.setRenderArray([]);\r\n    this.props.setRabbit('');\r\n    this.props.setBang('');\r\n    this.props.setMessage('');\r\n    this.props.setFireworks('');\r\n\r\n\r\n    /*\r\n    * snakeLogicArray contains information about pieces of snake, each piece information includes:\r\n    * piece type\r\n    * X coord\r\n    * Y coord\r\n    * direction of the piece (place where piece attach to other piece, its mean direction to\r\n    * next piece. This decision is not obvious, but I decided it is better)\r\n    * img file\r\n    */\r\n    this.snakeLogicArray = [\r\n      {\r\n        piece: 'head',\r\n        x: (5 * this.scale),\r\n        y: 0,\r\n        direction: 'left',\r\n        pic: head,\r\n      },\r\n      {\r\n        piece: 'body',\r\n        x: (4 * this.scale),\r\n        y: 0,\r\n        direction: 'left',\r\n        pic: body,\r\n      },\r\n      {\r\n        piece: 'body',\r\n        x: (3 * this.scale),\r\n        y: 0,\r\n        direction: 'left',\r\n        pic: body,\r\n      },\r\n      {\r\n        piece: 'body',\r\n        x: (2 * this.scale),\r\n        y: 0,\r\n        direction: 'left',\r\n        pic: body,\r\n      },\r\n      {\r\n        piece: 'tail',\r\n        x: (1 * this.scale),\r\n        y: 0,\r\n        direction: 'left',\r\n        pic: tail,\r\n      },\r\n    ];\r\n\r\n\r\n    this.props.setRabbitsToWin(this.props.winCondition);\r\n\r\n    this.ticCounter = 0;\r\n    this.currentMoveConnecton = 'left'; // direction of the snake head (direction where head attach to other piece)\r\n    this.nextMoveConnection = 'left'; // same in the next move\r\n    this.lastHeadConnection = 'left'; // same in the tic before\r\n    this.rabbitX = '';\r\n    this.rabbitY = '';\r\n    this.rabbitsEaten = 0;\r\n    this.rabbitJustEaten = false;\r\n    this.keyPressedThisTic = false;\r\n    this.keyBuffered = '';\r\n    this.props.setChooseLevel('');\r\n    this.gamePaused = false;\r\n    this.gameIn = true;\r\n    this.ticId = '';\r\n\r\n    this.ticGenerator();\r\n    this.createRenderSnakeArray();\r\n    this.addRabbit();\r\n\r\n    document.getElementsByClassName('board')[0].classList.add('playing');\r\n  }\r\n\r\n\r\n  // Generates the rhythm of the game\r\n  ticGenerator() {\r\n    this.ticId = setInterval(() => { this.ticHandler(); }, this.props.currentSpeed);\r\n    this.props.setSpeedRPS(((Math.round(1000 / this.props.currentSpeed * 100)) / 100).toFixed(2));\r\n  }\r\n\r\n\r\n  stopTic() {\r\n    clearInterval(this.ticId);\r\n  }\r\n\r\n  // events on every tic of the game\r\n  ticHandler() {\r\n    this.ticCounter = this.ticCounter + 1;\r\n    this.currentMoveConnecton = this.nextMoveConnection;\r\n    this.addNewBodyPieceToLogicArray();\r\n    this.removeLastBodyPieceFromLogicArray();\r\n    this.addTailToLogicArray();\r\n    this.addHeadToLogicArray();\r\n\r\n    if (this.keyPressedThisTic === true) {\r\n      this.keyPressedThisTic = false;\r\n      this.changeDirection(this.keyBuffered);\r\n      this.keyBuffered = '';\r\n    }\r\n\r\n    this.createRenderSnakeArray();\r\n  }\r\n\r\n  // changing game parameters which are dependent on game difficulty level\r\n  increaseDifficultyLevel() {\r\n    if (this.props.difficultyLevel === newbie) {\r\n      this.props.setRabbitsToWin(100);\r\n      this.props.setCurrentSpeed(170);\r\n      this.props.setSpeedLimit(130);\r\n      this.props.setSpeedStep(1);\r\n      this.props.setWinCondition(100);\r\n    } else if (this.props.difficultyLevel === veteran) {\r\n      this.props.setRabbitsToWin(140);\r\n      this.props.setCurrentSpeed(150);\r\n      this.props.setSpeedLimit(120);\r\n      this.props.setSpeedStep(1);\r\n      this.props.setWinCondition(140);\r\n    }\r\n    this.props.increaseDifficultyLevel();\r\n  }\r\n\r\n  // changing game parameters which are dependent on game difficulty level\r\n  decreaseDifficultyLevel() {\r\n    if (this.props.difficultyLevel === veteran) {\r\n      this.props.setRabbitsToWin(65);\r\n      this.props.setCurrentSpeed(200);\r\n      this.props.setSpeedLimit(150);\r\n      this.props.setSpeedStep(2);\r\n      this.props.setWinCondition(65);\r\n    } else if (this.props.difficultyLevel === ace) {\r\n      this.props.setRabbitsToWin(100);\r\n      this.props.setCurrentSpeed(170);\r\n      this.props.setSpeedLimit(130);\r\n      this.props.setSpeedStep(1);\r\n      this.props.setWinCondition(100);\r\n    }\r\n    this.props.decreaseDifficultyLevel();\r\n  }\r\n\r\n\r\n  keyPressHandler(e) {\r\n    const key = (e.keyCode ? e.keyCode : e.which);\r\n\r\n    if ((key === 13 || key === 32) && this.gameIn) { // enter and space when game already started\r\n      e.preventDefault();\r\n      this.pauseGame();\r\n    } else if ((key === 13 || key === 32) && !this.gameIn) { // enter and space in start menu\r\n      this.restartGame();\r\n    }\r\n\r\n    if ((key === 37) && !this.gameIn) { // cursor left in menu\r\n      this.decreaseDifficultyLevel();\r\n    }\r\n    if ((key === 39) && !this.gameIn) { // cursor right in menu\r\n      this.increaseDifficultyLevel();\r\n    }\r\n\r\n    if (( // bufferization of the key pressed if one keypress was already done in this tic\r\n      key === 37\r\n      || key === 38\r\n      || key === 39\r\n      || key === 40\r\n      || key === 65\r\n      || key === 68\r\n      || key === 83\r\n      || key === 87\r\n    ) && this.keyPressedThisTic === false && this.gameIn) {\r\n      this.keyPressedThisTic = true;\r\n      this.changeDirection(key);\r\n    } else if ((\r\n      key === 37\r\n      || key === 38\r\n      || key === 39\r\n      || key === 40\r\n      || key === 65\r\n      || key === 68\r\n      || key === 83\r\n      || key === 87\r\n    ) && this.gameIn) {\r\n      this.keyBuffered = key;\r\n    }\r\n\r\n    if (key === 77) { // mute / unmute sound\r\n      this.soundToggle();\r\n    }\r\n  }\r\n\r\n\r\n  // Changes direction of the snake movement\r\n  changeDirection(key) {\r\n    if ((key === 37 || key === 65) && this.currentMoveConnecton !== 'left') { // left arrow\r\n      this.nextMoveConnection = 'right';\r\n    }\r\n\r\n    if ((key === 38 || key === 87) && this.currentMoveConnecton !== 'up') { // up arrow\r\n      this.nextMoveConnection = 'down';\r\n    }\r\n\r\n    if ((key === 39 || key === 68) && this.currentMoveConnecton !== 'right') { // right arrow\r\n      this.nextMoveConnection = 'left';\r\n    }\r\n\r\n    if ((key === 40 || key === 83) && this.currentMoveConnecton !== 'down') { // down arrow\r\n      this.nextMoveConnection = 'up';\r\n    }\r\n  }\r\n\r\n  // increasing speed of the snake (tic rithm)\r\n  increaseSpeed() {\r\n    if (this.props.currentSpeed <= this.props.speedLimit) return;\r\n    const newCurrentSpeed = (this.props.currentSpeed - this.props.speedStep);\r\n    this.props.setCurrentSpeed(newCurrentSpeed);\r\n    clearInterval(this.ticId);\r\n    this.ticGenerator();\r\n\r\n    this.props.setSpeedRPS(((Math.round(1000 / this.props.currentSpeed * 100)) / 100).toFixed(2));\r\n  }\r\n\r\n  // Snake got the rabbit event\r\n  rabbitEaten() {\r\n    this.rabbitsEaten = this.rabbitsEaten + 1;\r\n    this.props.setRabbitsToWin(this.props.winCondition - this.rabbitsEaten);\r\n\r\n    if (this.rabbitsEaten === this.props.winCondition) {\r\n      this.congratulations();\r\n      return;\r\n    }\r\n\r\n    this.addRabbit();\r\n    if (this.soundIsOn) new Audio(nom).play();\r\n    this.rabbitJustEaten = true;\r\n    this.increaseSpeed();\r\n  }\r\n\r\n\r\n  snakeGotItself(x, y) {\r\n    this.stopTic();\r\n    if (this.soundIsOn) new Audio(aaarrrrr).play();\r\n\r\n    const style = { left: `${x - 100}px`, top: `${y - 100}px` };\r\n\r\n    this.props.setBang(\r\n      <img\r\n        src={bangIMG}\r\n        alt=\"\"\r\n        className=\"bang\"\r\n        style={style}\r\n      />,\r\n    );\r\n\r\n    this.timeoutId = setTimeout(() => { this.gameOver(); }, 2000);\r\n  }\r\n\r\n  // snake hit the border\r\n  collision(x, y) {\r\n    this.stopTic();\r\n    if (this.soundIsOn) new Audio(aaarrrrr).play();\r\n\r\n    const style = { left: `${x - 88}px`, top: `${y - 88}px` };\r\n\r\n    this.props.setBang(\r\n      <img\r\n        src={bangIMG}\r\n        alt=\"\"\r\n        className=\"bang\"\r\n        style={style}\r\n      />,\r\n    );\r\n\r\n    this.timeoutId = setTimeout(() => { this.gameOver(); }, 2000);\r\n  }\r\n\r\n  // welcome menu (game just loaded)\r\n  welcome() {\r\n    const style = { fontSize: `${this.scale * 2.5}px` };\r\n    this.props.setMessage(\r\n      <div className=\"message\" style={style}>\r\n        WELCOME TO<br />COZY SNAKE GAME!\r\n      </div>,\r\n    );\r\n    this.props.setChooseLevel(this.startMenu);\r\n  }\r\n\r\n  // pausing/unpausing game\r\n  pauseGame() {\r\n    if (!this.gamePaused) {\r\n      this.gamePaused = !this.gamePaused;\r\n      this.stopTic();\r\n      const style = { fontSize: `${this.scale * 5}px` };\r\n      this.props.setMessage(<div className=\"message\" style={style}>GAME PAUSED</div>);\r\n    } else {\r\n      this.gamePaused = !this.gamePaused;\r\n      this.props.setMessage('');\r\n      this.ticGenerator();\r\n    }\r\n  }\r\n\r\n  // game over menu\r\n  gameOver() {\r\n    this.gameIn = false;\r\n    this.removeGame();\r\n    const style = { fontSize: `${this.scale * 4}px` };\r\n    this.props.setMessage(<div className=\"message\" style={style}>GAME OVER</div>);\r\n    this.props.setChooseLevel(this.startMenu);\r\n  }\r\n\r\n  // win event\r\n  congratulations() {\r\n    this.gameIn = false;\r\n    this.removeGame();\r\n    if (this.soundIsOn) new Audio(yuhuu).play();\r\n\r\n    const styleFireworks = { height: `${this.scale * 20}px`, width: `${this.scale * 28}px` };\r\n    this.props.setFireworks(\r\n      <img\r\n        src={fireworksIMG}\r\n        alt=\"\"\r\n        className=\"fireworks\"\r\n        style={styleFireworks}\r\n      />,\r\n    );\r\n\r\n    this.timeoutId = setTimeout(() => {\r\n      this.props.setFireworks('');\r\n      const style = { fontSize: `${this.scale * 2.5}px` };\r\n      this.props.setMessage(<div className=\"message\" style={style}>CONGRATULATIONS! you win!</div>);\r\n      this.props.setChooseLevel(this.startMenu);\r\n    }, 2500);\r\n  }\r\n\r\n  // stoping tic and setting default condition of the game\r\n  removeGame() {\r\n    this.stopTic();\r\n\r\n    this.props.setRenderArray([]);\r\n    this.props.setRabbit('');\r\n    this.props.setBang('');\r\n\r\n    this.snakeLogicArray = [];\r\n    this.ticCounter = 0;\r\n    this.nextMoveConnection = 'left';\r\n    this.currentMoveConnecton = 'left';\r\n    this.lastHeadConnection = 'left';\r\n    this.rabbitX = '';\r\n    this.rabbitY = '';\r\n    this.rabbitsEaten = 0;\r\n    this.rabbitJustEaten = false;\r\n    this.ticId = '';\r\n    document.getElementsByClassName('board')[0].classList.remove('playing');\r\n  }\r\n\r\n\r\n  /*\r\n* headOnly - cheks if head coordinates equal to x,y of rabbit (got him!)\r\n* wholeSnake - cheks if all pieces of the snake coordinates equal to x,y (rabbit placement)\r\n* bodyAndTail - cheks if all pieces of the snake coordinates exept head equal to x,y (got itself!)\r\n* borderCollision - cheks if head coordinates equal bordiers coordinates\r\n*/\r\n  checkSnakeCoordinates(x, y, typeOfCheck) {\r\n    if (typeOfCheck === 'headOnly') {\r\n      if (this.snakeLogicArray[0].x === x && this.snakeLogicArray[0].y === y) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (typeOfCheck === 'wholeSnake') {\r\n      for (let i = 0; i < this.snakeLogicArray.length; i++) {\r\n        if (this.snakeLogicArray[i].x === x && this.snakeLogicArray[i].y === y) return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (typeOfCheck === 'bodyAndTail') {\r\n      for (let i = 1; i < (this.snakeLogicArray.length); i++) {\r\n        if (this.snakeLogicArray[i].x === x && this.snakeLogicArray[i].y === y) return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (typeOfCheck === 'borderCollision') {\r\n      if (x >= (28 * this.scale) || y >= (20 * this.scale) || x <= -1 || y <= -1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // adding new head to logic array\r\n  addHeadToLogicArray() {\r\n    this.lastHeadConnection = this.nextMoveConnection;\r\n\r\n    switch (this.nextMoveConnection) {\r\n      case 'left':\r\n        this.snakeLogicArray[0].x = this.snakeLogicArray[0].x + this.scale;\r\n        this.snakeLogicArray[0].direction = 'left';\r\n        break;\r\n\r\n      case 'right':\r\n        this.snakeLogicArray[0].x = this.snakeLogicArray[0].x - this.scale;\r\n        this.snakeLogicArray[0].direction = 'right';\r\n        break;\r\n\r\n      case 'up':\r\n        this.snakeLogicArray[0].y = this.snakeLogicArray[0].y + this.scale;\r\n        this.snakeLogicArray[0].direction = 'up';\r\n        break;\r\n\r\n      case 'down':\r\n        this.snakeLogicArray[0].y = this.snakeLogicArray[0].y - this.scale;\r\n        this.snakeLogicArray[0].direction = 'down';\r\n        break;\r\n\r\n      default: break;\r\n    }\r\n\r\n    if (this.checkSnakeCoordinates(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y, 'bodyAndTail') === true) {\r\n      this.snakeGotItself(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y);\r\n      return;\r\n    }\r\n    if (this.checkSnakeCoordinates(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y, 'borderCollision') === true) {\r\n      this.collision(this.snakeLogicArray[0].x, this.snakeLogicArray[0].y);\r\n      return;\r\n    }\r\n    if (this.checkSnakeCoordinates(this.rabbitX, this.rabbitY, 'headOnly') === true) {\r\n      this.rabbitEaten();\r\n    }\r\n  }\r\n\r\n  // adding new body piece to logic array\r\n  addNewBodyPieceToLogicArray() {\r\n    const newBodyPiece = {};\r\n    newBodyPiece.x = this.snakeLogicArray[0].x;\r\n    newBodyPiece.y = this.snakeLogicArray[0].y;\r\n\r\n    if (this.lastHeadConnection === this.nextMoveConnection) {\r\n      newBodyPiece.piece = 'body';\r\n      newBodyPiece.direction = this.snakeLogicArray[0].direction; // direction\r\n      newBodyPiece.pic = body; // img\r\n    } else {\r\n      newBodyPiece.piece = 'bodyCurve';\r\n      let nextConnection;\r\n      switch (this.nextMoveConnection) { // head connection is opposite to body ;)\r\n        case 'left':\r\n          nextConnection = 'right';\r\n          break;\r\n        case 'right':\r\n          nextConnection = 'left';\r\n          break;\r\n        case 'up':\r\n          nextConnection = 'down';\r\n          break;\r\n        case 'down':\r\n          nextConnection = 'up';\r\n          break;\r\n        default: break;\r\n      }\r\n      newBodyPiece.direction = `${this.lastHeadConnection}-${nextConnection}`; // direction\r\n      newBodyPiece.pic = bodyCurve; // img\r\n    }\r\n\r\n    this.snakeLogicArray.splice(1, 0, newBodyPiece);\r\n  }\r\n\r\n  // removing last body piece from logic array\r\n  removeLastBodyPieceFromLogicArray() {\r\n    if (this.rabbitJustEaten) return;\r\n    this.snakeLogicArray.splice((this.snakeLogicArray.length - 1), 1);\r\n  }\r\n\r\n  // adding tail piece to logic array\r\n  addTailToLogicArray() {\r\n    if (this.rabbitJustEaten) {\r\n      this.rabbitJustEaten = false;\r\n      return;\r\n    }\r\n\r\n    const lastPiecePosition = (this.snakeLogicArray.length - 1);\r\n    const lastPiece = this.snakeLogicArray[lastPiecePosition];\r\n    lastPiece.piece = 'tail';\r\n    lastPiece.pic = tail;\r\n\r\n    const lastPieceDirection = lastPiece.direction;\r\n    let connection;\r\n    const dashPosition = lastPieceDirection.indexOf('-');\r\n\r\n    if (dashPosition === -1) {\r\n      connection = lastPiece.direction;\r\n    } else {\r\n      connection = lastPiece.direction.slice(dashPosition + 1);\r\n      lastPiece.pic = tailUSD;\r\n    }\r\n\r\n    lastPiece.direction = connection;\r\n\r\n    this.snakeLogicArray[lastPiecePosition] = lastPiece;\r\n  }\r\n\r\n  // adding new rabbit to game field\r\n  addRabbit() {\r\n    let x; let y; let checkResult;\r\n\r\n    do {\r\n      x = randomInt(0, 27) * this.scale;\r\n      y = randomInt(0, 19) * this.scale;\r\n      checkResult = this.checkSnakeCoordinates(x, y, 'wholeSnake');\r\n    } while (!checkResult);\r\n\r\n    this.rabbitX = x;\r\n    this.rabbitY = y;\r\n\r\n    const style = { left: `${x}px`, top: `${y}px`, height: `${this.scale}px` };\r\n\r\n    this.props.setRabbit(\r\n      <img\r\n        src={rabbitIMG}\r\n        alt=\"\"\r\n        className=\"rabbit\"\r\n        style={style}\r\n      />,\r\n    );\r\n  }\r\n\r\n\r\n  // convert logic array to render array\r\n  createRenderSnakeArray() {\r\n    const newRenderArray = [];\r\n\r\n    for (let i = 0; i < this.snakeLogicArray.length; i++) {\r\n      const style = { left: (`${this.snakeLogicArray[i].x}px`), top: (`${this.snakeLogicArray[i].y}px`) };\r\n      newRenderArray.push(\r\n        <img\r\n          key={`${this.snakeLogicArray[i].x} ${this.snakeLogicArray[i].y}`}\r\n          src={this.snakeLogicArray[i].pic}\r\n          alt=\"\"\r\n          className={`${this.snakeLogicArray[i].piece} ${this.snakeLogicArray[i].direction}`}\r\n          style={style}\r\n        />,\r\n      );\r\n    }\r\n    this.props.setRenderArray(newRenderArray);\r\n\r\n    // setting up sizes of images for snake\r\n    this.headElement = document.getElementsByClassName('head')[0];\r\n    if (this.headElement) {\r\n      this.headElement.style.height = `${this.scale}px`;\r\n      this.bodyElements = document.getElementsByClassName('body');\r\n      for (let i = 0; i < this.bodyElements.length; i++) {\r\n        this.bodyElements[i].style.height = `${this.scale}px`;\r\n      }\r\n      this.tailElement = document.getElementsByClassName('tail')[0];\r\n      this.tailElement.style.height = `${this.scale}px`;\r\n    }\r\n  }\r\n\r\n  // initiating sound icon\r\n  soundInit() {\r\n    this.soundIsOn = true;\r\n    this.sound = (\r\n      <img\r\n        src={soundOn}\r\n        alt=\"\"\r\n        className=\"sound\"\r\n        onClick={this.soundToggle.bind(this)}\r\n      />\r\n    );\r\n  }\r\n\r\n  // mute / unmute sound\r\n  soundToggle() {\r\n    if (this.soundIsOn) {\r\n      this.soundIsOn = false;\r\n      this.sound = (\r\n        <img\r\n          src={soundOff}\r\n          alt=\"\"\r\n          className=\"sound\"\r\n          onClick={this.soundToggle.bind(this)}\r\n        />\r\n      );\r\n      this.forceUpdate();\r\n    } else {\r\n      this.soundIsOn = true;\r\n      this.sound = (\r\n        <img\r\n          src={soundOn}\r\n          alt=\"\"\r\n          className=\"sound\"\r\n          onClick={this.soundToggle.bind(this)}\r\n        />\r\n      );\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div\r\n        className=\"container\"\r\n      >\r\n\r\n        <div\r\n          className=\"leftColumn\"\r\n        >\r\n          <div className=\"board\">\r\n            {this.props.renderArray}\r\n            {this.props.rabbit}\r\n            {this.props.bang}\r\n            {this.props.message}\r\n            {this.props.chooseLevel}\r\n            {this.props.fireworks}\r\n          </div>\r\n\r\n          {/* board */}\r\n\r\n          {this.sound}\r\n\r\n        </div>\r\n\r\n        {/* leftColumn */}\r\n\r\n\r\n        <div\r\n          className=\"rightColumn\"\r\n        >\r\n          <div className=\"toPlay\">To play the game use cursor keys or aswd keys and space</div>\r\n          <div className=\"difficultyLevel\">\r\n            Your difficulty level is\r\n            <span className=\"info\"> {this.props.difficultyLevel} </span>\r\n          </div>\r\n\r\n          <div className=\"speedRPS\">\r\n            Your current speed is\r\n            <span className=\"info\"> {this.props.speedRPS} </span>\r\n              rabbits per second\r\n          </div>\r\n\r\n          <div className=\"rabbitsToWin\">\r\n            You have to eat\r\n            <span className=\"info\"> {this.props.rabbitsToWin} </span>\r\n            more rabbits to win\r\n          </div>\r\n\r\n          <div className=\"technologyStack\">\r\n            Technology stack for this game: React.js, Redux, javascript (ES6), css, html\r\n          </div>\r\n          <div className=\"github\">\r\n            You can get the source code of this game at my\r\n            <span className=\"info\"> <a href=\"https://github.com/KEH9\">github</a></span>\r\n            &nbsp;account\r\n          </div>\r\n\r\n          <div className=\"offerAJob\">\r\n            If you want to\r\n            <br />\r\n            <span className=\"info\">offer me a job</span>\r\n            <br />\r\n            visit my&nbsp;\r\n            <span className=\"info\"><NavLink to=\"/resume\">website</NavLink></span>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {/* rightColumn */}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  difficultyLevel: state.difficultyLevel,\r\n  rabbitsToWin: state.rabbitsToWin,\r\n  currentSpeed: state.currentSpeed,\r\n  speedLimit: state.speedLimit,\r\n  speedStep: state.speedStep,\r\n  winCondition: state.winCondition,\r\n  renderArray: state.renderArray,\r\n  rabbit: state.rabbit,\r\n  bang: state.bang,\r\n  message: state.message,\r\n  speedRPS: state.speedRPS,\r\n  chooseLevel: state.chooseLevel,\r\n  fireworks: state.fireworks,\r\n  scale: state.scale,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  increaseDifficultyLevel: () => { dispatch(increaseDifficultyLevel()); },\r\n  decreaseDifficultyLevel: () => { dispatch(decreaseDifficultyLevel()); },\r\n  setRabbitsToWin: (rabbitsToWin) => { dispatch(setRabbitsToWin(rabbitsToWin)); },\r\n  setCurrentSpeed: (currentSpeed) => { dispatch(setCurrentSpeed(currentSpeed)); },\r\n  setSpeedLimit: (speedLimit) => { dispatch(setSpeedLimit(speedLimit)); },\r\n  setSpeedStep: (speedStep) => { dispatch(setSpeedStep(speedStep)); },\r\n  setWinCondition: (winCondition) => { dispatch(setWinCondition(winCondition)); },\r\n  setRenderArray: (renderArray) => { dispatch(setRenderArray(renderArray)); },\r\n  setRabbit: (rabbit) => { dispatch(setRabbit(rabbit)); },\r\n  setBang: (bang) => { dispatch(setBang(bang)); },\r\n  setMessage: (message) => { dispatch(setMessage(message)); },\r\n  setSpeedRPS: (speedRPS) => { dispatch(setSpeedRPS(speedRPS)); },\r\n  setChooseLevel: (chooseLevel) => { dispatch(setChooseLevel(chooseLevel)); },\r\n  setFireworks: (fireworks) => { dispatch(setFireworks(fireworks)); },\r\n  setScale: (scale) => { dispatch(setScale(scale)); },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Game);\r\n"]},"metadata":{},"sourceType":"module"}